"use strict";const Web3Modal=window.Web3Modal.default;let web3Modal,provider,selectedAccount;function init(){web3Modal=new Web3Modal({cacheProvider:!1,providerOptions:{}})}async function fetchAccountData(){const e=new Web3(provider),t=(await e.eth.getChainId(),await e.eth.getAccounts());selectedAccount=t[0],document.querySelector("#prepare").style.display="none",document.querySelector("#connected").style.display="block"}async function refreshAccountData(){document.querySelector("#connected").style.display="none",document.querySelector("#prepare").style.display="block",document.querySelector("#btn-connect").setAttribute("disabled","disabled"),await fetchAccountData(provider),document.querySelector("#btn-connect").removeAttribute("disabled")}async function onConnect(){if(void 0!==window.ethereum){try{provider=await web3Modal.connect()}catch(e){return void console.log("Could not get a wallet connection",e)}provider.on("accountsChanged",e=>{fetchAccountData()}),provider.on("chainChanged",e=>{fetchAccountData()}),provider.on("networkChanged",e=>{fetchAccountData()}),await refreshAccountData()}else alert("Please install MetaMask!")}async function onDisconnect(){provider.close&&(await provider.close(),await web3Modal.clearCachedProvider(),provider=null),selectedAccount=null,document.querySelector("#prepare").style.display="block",document.querySelector("#connected").style.display="none"}function sendEth(){var e=$("#enjin-address").val();if(0==document.getElementsByName("user_email")[0].value.length)return alert("You don't have an email address. \n So you can't checkout.\n Please fill out an email address."),hidePleaseWait(),!1;if(0==e.length)return $(".wrapper-enjin-address p").show(),!1;0!=e.length&&showPleaseWait();const t=document.querySelector("#eth-amount").textContent;new Web3(provider);ethereum.request({method:"eth_sendTransaction",params:[{from:selectedAccount,to:document.getElementsByName("wallet_address")[0].value,value:Web3.utils.numberToHex(Web3.utils.toWei(t,"ether")),gasPrice:Web3.utils.numberToHex(Web3.utils.toWei("100","gwei")),gas:Web3.utils.numberToHex("21000")}]}).then(t=>{console.log(t),waitForReceipt(t,function(n){const o=document.getElementsByName("csrfmiddlewaretoken")[0].value,c=document.getElementsByName("user_name")[0].value,a=document.getElementsByName("user_email")[0].value;fetch(`/api/checkout-crypto-session/${c}/`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRFToken":o},body:JSON.stringify({email:a,transaction:t,enjin_address:e})}).then(function(e){return e.json()}).then(function(e){hidePleaseWait(),window.location.href=window.location.origin+"/payment-success?session_id="+t+"&type=Crypto"}).catch(function(e){console.error("Error:",e)})})}).catch(e=>{console.log(e),hidePleaseWait()})}function waitForReceipt(e,t){new Web3(provider).eth.getTransactionReceipt(e,function(n,o){n&&error(n),null!==o?t&&t(o):window.setTimeout(function(){waitForReceipt(e,t)},1e3)})}function showPleaseWait(){null==document.querySelector("#loader-wrapper")&&$(".main section").append('<div id="loader-wrapper"">            <div class="loader"></div>        </div>')}function hidePleaseWait(){$("#loader-wrapper").remove()}window.addEventListener("load",async()=>{init(),document.querySelector("#btn-connect").addEventListener("click",onConnect),document.querySelector("#btn-checkout-crypto").addEventListener("click",sendEth),document.querySelector("#btn-disconnect").addEventListener("click",onDisconnect)});